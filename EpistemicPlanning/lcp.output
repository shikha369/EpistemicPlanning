Useless nonterminals

   gd_formula


Useless rules

   76 gd_formula: literal
   77           | gd_formula COMMA gd_formula
   78           | gd_formula OR gd_formula
   79           | LEFT_PAREN gd_formula RIGHT_PAREN


State 0 conflicts: 1 reduce/reduce
State 99 conflicts: 2 shift/reduce
State 132 conflicts: 3 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | fluent_decls action_decls agent_decls domain init_spec goal_spec

    3 id: ID

    4 constant: NUMBER
    5         | id

    6 param: constant

    7 param_list: param
    8           | param_list COMMA param

    9 fluent: id
   10       | id LEFT_PAREN param_list RIGHT_PAREN

   11 fluent_det_list: fluent

   12 fluent_list: fluent
   13            | fluent_list COMMA fluent

   14 literal: fluent
   15        | NEGATION fluent

   16 literal_list: literal
   17             | literal_list COMMA literal

   18 formula: literal
   19        | formula COMMA formula
   20        | formula OR formula
   21        | LEFT_PAREN formula RIGHT_PAREN

   22 fluent_decl: FLUENT fluent_list SEMICOLON

   23 fluent_decls: /* empty */
   24             | fluent_decls fluent_decl

   25 action: id
   26       | id LEFT_PAREN param_list RIGHT_PAREN

   27 action_list: action
   28            | action_list COMMA action

   29 action_decl: ACTION action_list SEMICOLON

   30 action_decls: /* empty */
   31             | action_decls action_decl

   32 agent: id
   33      | id LEFT_PAREN param_list RIGHT_PAREN

   34 agent_list: agent
   35           | agent_list COMMA agent

   36 agent_decl: AGENT agent_list SEMICOLON

   37 agent_decls: /* empty */
   38            | agent_decls agent_decl

   39 if_part: /* empty */
   40        | IF literal_list

   41 if_part_bf: /* empty */
   42           | IF belief_formula

   43 belief_formula: formula
   44               | B LEFT_PAREN agent COMMA belief_formula RIGHT_PAREN
   45               | belief_formula COMMA belief_formula
   46               | belief_formula OR belief_formula
   47               | LEFT_PAREN NEGATION belief_formula RIGHT_PAREN
   48               | E LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN
   49               | C LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

   50 if_part_fluent: /* empty */
   51               | IF formula

   52 static_law: literal_list if_part SEMICOLON

   53 dynamic_law: action CAUSES literal_list if_part_bf SEMICOLON

   54 executability: EXECUTABLE action if_part_bf SEMICOLON

   55 determine: action DETERMINE fluent_det_list SEMICOLON

   56 announcement: action ANNOUNCES formula SEMICOLON

   57 awareness: agent AWAREOF action if_part_fluent SEMICOLON

   58 observance: agent OBSERVES action if_part_fluent SEMICOLON

   59 impossibility: IMPOSSIBLE action if_part SEMICOLON

   60 proposition: static_law
   61            | dynamic_law
   62            | executability
   63            | impossibility
   64            | determine
   65            | announcement
   66            | observance
   67            | awareness

   68 domain: /* empty */
   69       | domain proposition

   70 init: INIT belief_formula SEMICOLON

   71 init_spec: /* empty */
   72          | init_spec init

   73 goal: GOAL belief_formula SEMICOLON

   74 goal_spec: /* empty */
   75          | goal_spec goal


Terminals, with rules where they appear

$end (0) 0
error (256)
OR (258) 20 46
COMMA (259) 8 13 17 19 28 35 44 45 48 49
SEMICOLON (260) 22 29 36 52 53 54 55 56 57 58 59 70 73
LEFT_PAREN (261) 10 21 26 33 44 47 48 49
RIGHT_PAREN (262) 10 21 26 33 44 47 48 49
RIGHT_BRAC (263) 48 49
LEFT_BRAC (264) 48 49
ID (265) 3
NEGATION (266) 15 47
NUMBER (267) 4
FLUENT (268) 22
ACTION (269) 29
IF (270) 40 42 51
CAUSES (271) 53
EXECUTABLE (272) 54
IMPOSSIBLE (273) 59
DETERMINE (274) 55
AWAREOF (275) 57
OBSERVES (276) 58
ANNOUNCES (277) 56
INIT (278) 70
GOAL (279) 73
AGENT (280) 36
B (281) 44
C (282) 49
E (283) 48


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
input (30)
    on left: 1 2, on right: 0
id (31)
    on left: 3, on right: 5 9 10 25 26 32 33
constant (32)
    on left: 4 5, on right: 6
param (33)
    on left: 6, on right: 7 8
param_list (34)
    on left: 7 8, on right: 8 10 26 33
fluent (35)
    on left: 9 10, on right: 11 12 13 14 15
fluent_det_list (36)
    on left: 11, on right: 55
fluent_list (37)
    on left: 12 13, on right: 13 22
literal (38)
    on left: 14 15, on right: 16 17 18
literal_list (39)
    on left: 16 17, on right: 17 40 52 53
formula (40)
    on left: 18 19 20 21, on right: 19 20 21 43 51 56
fluent_decl (41)
    on left: 22, on right: 24
fluent_decls (42)
    on left: 23 24, on right: 2 24
action (43)
    on left: 25 26, on right: 27 28 53 54 55 56 57 58 59
action_list (44)
    on left: 27 28, on right: 28 29
action_decl (45)
    on left: 29, on right: 31
action_decls (46)
    on left: 30 31, on right: 2 31
agent (47)
    on left: 32 33, on right: 34 35 44 57 58
agent_list (48)
    on left: 34 35, on right: 35 36 48 49
agent_decl (49)
    on left: 36, on right: 38
agent_decls (50)
    on left: 37 38, on right: 2 38
if_part (51)
    on left: 39 40, on right: 52 59
if_part_bf (52)
    on left: 41 42, on right: 53 54
belief_formula (53)
    on left: 43 44 45 46 47 48 49, on right: 42 44 45 46 47 48 49 70
    73
if_part_fluent (54)
    on left: 50 51, on right: 57 58
static_law (55)
    on left: 52, on right: 60
dynamic_law (56)
    on left: 53, on right: 61
executability (57)
    on left: 54, on right: 62
determine (58)
    on left: 55, on right: 64
announcement (59)
    on left: 56, on right: 65
awareness (60)
    on left: 57, on right: 67
observance (61)
    on left: 58, on right: 66
impossibility (62)
    on left: 59, on right: 63
proposition (63)
    on left: 60 61 62 63 64 65 66 67, on right: 69
domain (64)
    on left: 68 69, on right: 2 69
init (65)
    on left: 70, on right: 72
init_spec (66)
    on left: 71 72, on right: 2 72
goal (67)
    on left: 73, on right: 75
goal_spec (68)
    on left: 74 75, on right: 2 75


state 0

    0 $accept: . input $end

    $end      reduce using rule 1 (input)
    $end      [reduce using rule 23 (fluent_decls)]
    $default  reduce using rule 23 (fluent_decls)

    input         go to state 1
    fluent_decls  go to state 2


state 1

    0 $accept: input . $end

    $end  shift, and go to state 3


state 2

    2 input: fluent_decls . action_decls agent_decls domain init_spec goal_spec
   24 fluent_decls: fluent_decls . fluent_decl

    FLUENT  shift, and go to state 4

    $default  reduce using rule 30 (action_decls)

    fluent_decl   go to state 5
    action_decls  go to state 6


state 3

    0 $accept: input $end .

    $default  accept


state 4

   22 fluent_decl: FLUENT . fluent_list SEMICOLON

    ID  shift, and go to state 7

    id           go to state 8
    fluent       go to state 9
    fluent_list  go to state 10


state 5

   24 fluent_decls: fluent_decls fluent_decl .

    $default  reduce using rule 24 (fluent_decls)


state 6

    2 input: fluent_decls action_decls . agent_decls domain init_spec goal_spec
   31 action_decls: action_decls . action_decl

    ACTION  shift, and go to state 11

    $default  reduce using rule 37 (agent_decls)

    action_decl  go to state 12
    agent_decls  go to state 13


state 7

    3 id: ID .

    $default  reduce using rule 3 (id)


state 8

    9 fluent: id .
   10       | id . LEFT_PAREN param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 14

    $default  reduce using rule 9 (fluent)


state 9

   12 fluent_list: fluent .

    $default  reduce using rule 12 (fluent_list)


state 10

   13 fluent_list: fluent_list . COMMA fluent
   22 fluent_decl: FLUENT fluent_list . SEMICOLON

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 16


state 11

   29 action_decl: ACTION . action_list SEMICOLON

    ID  shift, and go to state 7

    id           go to state 17
    action       go to state 18
    action_list  go to state 19


state 12

   31 action_decls: action_decls action_decl .

    $default  reduce using rule 31 (action_decls)


state 13

    2 input: fluent_decls action_decls agent_decls . domain init_spec goal_spec
   38 agent_decls: agent_decls . agent_decl

    AGENT  shift, and go to state 20

    $default  reduce using rule 68 (domain)

    agent_decl  go to state 21
    domain      go to state 22


state 14

   10 fluent: id LEFT_PAREN . param_list RIGHT_PAREN

    ID      shift, and go to state 7
    NUMBER  shift, and go to state 23

    id          go to state 24
    constant    go to state 25
    param       go to state 26
    param_list  go to state 27


state 15

   13 fluent_list: fluent_list COMMA . fluent

    ID  shift, and go to state 7

    id      go to state 8
    fluent  go to state 28


state 16

   22 fluent_decl: FLUENT fluent_list SEMICOLON .

    $default  reduce using rule 22 (fluent_decl)


state 17

   25 action: id .
   26       | id . LEFT_PAREN param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 29

    $default  reduce using rule 25 (action)


state 18

   27 action_list: action .

    $default  reduce using rule 27 (action_list)


state 19

   28 action_list: action_list . COMMA action
   29 action_decl: ACTION action_list . SEMICOLON

    COMMA      shift, and go to state 30
    SEMICOLON  shift, and go to state 31


state 20

   36 agent_decl: AGENT . agent_list SEMICOLON

    ID  shift, and go to state 7

    id          go to state 32
    agent       go to state 33
    agent_list  go to state 34


state 21

   38 agent_decls: agent_decls agent_decl .

    $default  reduce using rule 38 (agent_decls)


state 22

    2 input: fluent_decls action_decls agent_decls domain . init_spec goal_spec
   69 domain: domain . proposition

    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    EXECUTABLE  shift, and go to state 36
    IMPOSSIBLE  shift, and go to state 37

    $default  reduce using rule 71 (init_spec)

    id             go to state 38
    fluent         go to state 39
    literal        go to state 40
    literal_list   go to state 41
    action         go to state 42
    agent          go to state 43
    static_law     go to state 44
    dynamic_law    go to state 45
    executability  go to state 46
    determine      go to state 47
    announcement   go to state 48
    awareness      go to state 49
    observance     go to state 50
    impossibility  go to state 51
    proposition    go to state 52
    init_spec      go to state 53


state 23

    4 constant: NUMBER .

    $default  reduce using rule 4 (constant)


state 24

    5 constant: id .

    $default  reduce using rule 5 (constant)


state 25

    6 param: constant .

    $default  reduce using rule 6 (param)


state 26

    7 param_list: param .

    $default  reduce using rule 7 (param_list)


state 27

    8 param_list: param_list . COMMA param
   10 fluent: id LEFT_PAREN param_list . RIGHT_PAREN

    COMMA        shift, and go to state 54
    RIGHT_PAREN  shift, and go to state 55


state 28

   13 fluent_list: fluent_list COMMA fluent .

    $default  reduce using rule 13 (fluent_list)


state 29

   26 action: id LEFT_PAREN . param_list RIGHT_PAREN

    ID      shift, and go to state 7
    NUMBER  shift, and go to state 23

    id          go to state 24
    constant    go to state 25
    param       go to state 26
    param_list  go to state 56


state 30

   28 action_list: action_list COMMA . action

    ID  shift, and go to state 7

    id      go to state 17
    action  go to state 57


state 31

   29 action_decl: ACTION action_list SEMICOLON .

    $default  reduce using rule 29 (action_decl)


state 32

   32 agent: id .
   33      | id . LEFT_PAREN param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 58

    $default  reduce using rule 32 (agent)


state 33

   34 agent_list: agent .

    $default  reduce using rule 34 (agent_list)


state 34

   35 agent_list: agent_list . COMMA agent
   36 agent_decl: AGENT agent_list . SEMICOLON

    COMMA      shift, and go to state 59
    SEMICOLON  shift, and go to state 60


state 35

   15 literal: NEGATION . fluent

    ID  shift, and go to state 7

    id      go to state 8
    fluent  go to state 61


state 36

   54 executability: EXECUTABLE . action if_part_bf SEMICOLON

    ID  shift, and go to state 7

    id      go to state 17
    action  go to state 62


state 37

   59 impossibility: IMPOSSIBLE . action if_part SEMICOLON

    ID  shift, and go to state 7

    id      go to state 17
    action  go to state 63


state 38

    9 fluent: id .
   10       | id . LEFT_PAREN param_list RIGHT_PAREN
   25 action: id .
   26       | id . LEFT_PAREN param_list RIGHT_PAREN
   32 agent: id .
   33      | id . LEFT_PAREN param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 64

    CAUSES     reduce using rule 25 (action)
    DETERMINE  reduce using rule 25 (action)
    AWAREOF    reduce using rule 32 (agent)
    OBSERVES   reduce using rule 32 (agent)
    ANNOUNCES  reduce using rule 25 (action)
    $default   reduce using rule 9 (fluent)


state 39

   14 literal: fluent .

    $default  reduce using rule 14 (literal)


state 40

   16 literal_list: literal .

    $default  reduce using rule 16 (literal_list)


state 41

   17 literal_list: literal_list . COMMA literal
   52 static_law: literal_list . if_part SEMICOLON

    COMMA  shift, and go to state 65
    IF     shift, and go to state 66

    $default  reduce using rule 39 (if_part)

    if_part  go to state 67


state 42

   53 dynamic_law: action . CAUSES literal_list if_part_bf SEMICOLON
   55 determine: action . DETERMINE fluent_det_list SEMICOLON
   56 announcement: action . ANNOUNCES formula SEMICOLON

    CAUSES     shift, and go to state 68
    DETERMINE  shift, and go to state 69
    ANNOUNCES  shift, and go to state 70


state 43

   57 awareness: agent . AWAREOF action if_part_fluent SEMICOLON
   58 observance: agent . OBSERVES action if_part_fluent SEMICOLON

    AWAREOF   shift, and go to state 71
    OBSERVES  shift, and go to state 72


state 44

   60 proposition: static_law .

    $default  reduce using rule 60 (proposition)


state 45

   61 proposition: dynamic_law .

    $default  reduce using rule 61 (proposition)


state 46

   62 proposition: executability .

    $default  reduce using rule 62 (proposition)


state 47

   64 proposition: determine .

    $default  reduce using rule 64 (proposition)


state 48

   65 proposition: announcement .

    $default  reduce using rule 65 (proposition)


state 49

   67 proposition: awareness .

    $default  reduce using rule 67 (proposition)


state 50

   66 proposition: observance .

    $default  reduce using rule 66 (proposition)


state 51

   63 proposition: impossibility .

    $default  reduce using rule 63 (proposition)


state 52

   69 domain: domain proposition .

    $default  reduce using rule 69 (domain)


state 53

    2 input: fluent_decls action_decls agent_decls domain init_spec . goal_spec
   72 init_spec: init_spec . init

    INIT  shift, and go to state 73

    $default  reduce using rule 74 (goal_spec)

    init       go to state 74
    goal_spec  go to state 75


state 54

    8 param_list: param_list COMMA . param

    ID      shift, and go to state 7
    NUMBER  shift, and go to state 23

    id        go to state 24
    constant  go to state 25
    param     go to state 76


state 55

   10 fluent: id LEFT_PAREN param_list RIGHT_PAREN .

    $default  reduce using rule 10 (fluent)


state 56

    8 param_list: param_list . COMMA param
   26 action: id LEFT_PAREN param_list . RIGHT_PAREN

    COMMA        shift, and go to state 54
    RIGHT_PAREN  shift, and go to state 77


state 57

   28 action_list: action_list COMMA action .

    $default  reduce using rule 28 (action_list)


state 58

   33 agent: id LEFT_PAREN . param_list RIGHT_PAREN

    ID      shift, and go to state 7
    NUMBER  shift, and go to state 23

    id          go to state 24
    constant    go to state 25
    param       go to state 26
    param_list  go to state 78


state 59

   35 agent_list: agent_list COMMA . agent

    ID  shift, and go to state 7

    id     go to state 32
    agent  go to state 79


state 60

   36 agent_decl: AGENT agent_list SEMICOLON .

    $default  reduce using rule 36 (agent_decl)


state 61

   15 literal: NEGATION fluent .

    $default  reduce using rule 15 (literal)


state 62

   54 executability: EXECUTABLE action . if_part_bf SEMICOLON

    IF  shift, and go to state 80

    $default  reduce using rule 41 (if_part_bf)

    if_part_bf  go to state 81


state 63

   59 impossibility: IMPOSSIBLE action . if_part SEMICOLON

    IF  shift, and go to state 66

    $default  reduce using rule 39 (if_part)

    if_part  go to state 82


state 64

   10 fluent: id LEFT_PAREN . param_list RIGHT_PAREN
   26 action: id LEFT_PAREN . param_list RIGHT_PAREN
   33 agent: id LEFT_PAREN . param_list RIGHT_PAREN

    ID      shift, and go to state 7
    NUMBER  shift, and go to state 23

    id          go to state 24
    constant    go to state 25
    param       go to state 26
    param_list  go to state 83


state 65

   17 literal_list: literal_list COMMA . literal

    ID        shift, and go to state 7
    NEGATION  shift, and go to state 35

    id       go to state 8
    fluent   go to state 39
    literal  go to state 84


state 66

   40 if_part: IF . literal_list

    ID        shift, and go to state 7
    NEGATION  shift, and go to state 35

    id            go to state 8
    fluent        go to state 39
    literal       go to state 40
    literal_list  go to state 85


state 67

   52 static_law: literal_list if_part . SEMICOLON

    SEMICOLON  shift, and go to state 86


state 68

   53 dynamic_law: action CAUSES . literal_list if_part_bf SEMICOLON

    ID        shift, and go to state 7
    NEGATION  shift, and go to state 35

    id            go to state 8
    fluent        go to state 39
    literal       go to state 40
    literal_list  go to state 87


state 69

   55 determine: action DETERMINE . fluent_det_list SEMICOLON

    ID  shift, and go to state 7

    id               go to state 8
    fluent           go to state 88
    fluent_det_list  go to state 89


state 70

   56 announcement: action ANNOUNCES . formula SEMICOLON

    LEFT_PAREN  shift, and go to state 90
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35

    id       go to state 8
    fluent   go to state 39
    literal  go to state 91
    formula  go to state 92


state 71

   57 awareness: agent AWAREOF . action if_part_fluent SEMICOLON

    ID  shift, and go to state 7

    id      go to state 17
    action  go to state 93


state 72

   58 observance: agent OBSERVES . action if_part_fluent SEMICOLON

    ID  shift, and go to state 7

    id      go to state 17
    action  go to state 94


state 73

   70 init: INIT . belief_formula SEMICOLON

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 100


state 74

   72 init_spec: init_spec init .

    $default  reduce using rule 72 (init_spec)


state 75

    2 input: fluent_decls action_decls agent_decls domain init_spec goal_spec .
   75 goal_spec: goal_spec . goal

    GOAL  shift, and go to state 101

    $default  reduce using rule 2 (input)

    goal  go to state 102


state 76

    8 param_list: param_list COMMA param .

    $default  reduce using rule 8 (param_list)


state 77

   26 action: id LEFT_PAREN param_list RIGHT_PAREN .

    $default  reduce using rule 26 (action)


state 78

    8 param_list: param_list . COMMA param
   33 agent: id LEFT_PAREN param_list . RIGHT_PAREN

    COMMA        shift, and go to state 54
    RIGHT_PAREN  shift, and go to state 103


state 79

   35 agent_list: agent_list COMMA agent .

    $default  reduce using rule 35 (agent_list)


state 80

   42 if_part_bf: IF . belief_formula

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 104


state 81

   54 executability: EXECUTABLE action if_part_bf . SEMICOLON

    SEMICOLON  shift, and go to state 105


state 82

   59 impossibility: IMPOSSIBLE action if_part . SEMICOLON

    SEMICOLON  shift, and go to state 106


state 83

    8 param_list: param_list . COMMA param
   10 fluent: id LEFT_PAREN param_list . RIGHT_PAREN
   26 action: id LEFT_PAREN param_list . RIGHT_PAREN
   33 agent: id LEFT_PAREN param_list . RIGHT_PAREN

    COMMA        shift, and go to state 54
    RIGHT_PAREN  shift, and go to state 107


state 84

   17 literal_list: literal_list COMMA literal .

    $default  reduce using rule 17 (literal_list)


state 85

   17 literal_list: literal_list . COMMA literal
   40 if_part: IF literal_list .

    COMMA  shift, and go to state 65

    $default  reduce using rule 40 (if_part)


state 86

   52 static_law: literal_list if_part SEMICOLON .

    $default  reduce using rule 52 (static_law)


state 87

   17 literal_list: literal_list . COMMA literal
   53 dynamic_law: action CAUSES literal_list . if_part_bf SEMICOLON

    COMMA  shift, and go to state 65
    IF     shift, and go to state 80

    $default  reduce using rule 41 (if_part_bf)

    if_part_bf  go to state 108


state 88

   11 fluent_det_list: fluent .

    $default  reduce using rule 11 (fluent_det_list)


state 89

   55 determine: action DETERMINE fluent_det_list . SEMICOLON

    SEMICOLON  shift, and go to state 109


state 90

   21 formula: LEFT_PAREN . formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 90
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35

    id       go to state 8
    fluent   go to state 39
    literal  go to state 91
    formula  go to state 110


state 91

   18 formula: literal .

    $default  reduce using rule 18 (formula)


state 92

   19 formula: formula . COMMA formula
   20        | formula . OR formula
   56 announcement: action ANNOUNCES formula . SEMICOLON

    OR         shift, and go to state 111
    COMMA      shift, and go to state 112
    SEMICOLON  shift, and go to state 113


state 93

   57 awareness: agent AWAREOF action . if_part_fluent SEMICOLON

    IF  shift, and go to state 114

    $default  reduce using rule 50 (if_part_fluent)

    if_part_fluent  go to state 115


state 94

   58 observance: agent OBSERVES action . if_part_fluent SEMICOLON

    IF  shift, and go to state 114

    $default  reduce using rule 50 (if_part_fluent)

    if_part_fluent  go to state 116


state 95

   21 formula: LEFT_PAREN . formula RIGHT_PAREN
   47 belief_formula: LEFT_PAREN . NEGATION belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 90
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 117

    id       go to state 8
    fluent   go to state 39
    literal  go to state 91
    formula  go to state 110


state 96

   44 belief_formula: B . LEFT_PAREN agent COMMA belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 118


state 97

   49 belief_formula: C . LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 119


state 98

   48 belief_formula: E . LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 120


state 99

   19 formula: formula . COMMA formula
   20        | formula . OR formula
   43 belief_formula: formula .

    OR     shift, and go to state 111
    COMMA  shift, and go to state 112

    OR        [reduce using rule 43 (belief_formula)]
    COMMA     [reduce using rule 43 (belief_formula)]
    $default  reduce using rule 43 (belief_formula)


state 100

   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula
   70 init: INIT belief_formula . SEMICOLON

    OR         shift, and go to state 121
    COMMA      shift, and go to state 122
    SEMICOLON  shift, and go to state 123


state 101

   73 goal: GOAL . belief_formula SEMICOLON

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 124


state 102

   75 goal_spec: goal_spec goal .

    $default  reduce using rule 75 (goal_spec)


state 103

   33 agent: id LEFT_PAREN param_list RIGHT_PAREN .

    $default  reduce using rule 33 (agent)


state 104

   42 if_part_bf: IF belief_formula .
   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula

    OR     shift, and go to state 121
    COMMA  shift, and go to state 122

    $default  reduce using rule 42 (if_part_bf)


state 105

   54 executability: EXECUTABLE action if_part_bf SEMICOLON .

    $default  reduce using rule 54 (executability)


state 106

   59 impossibility: IMPOSSIBLE action if_part SEMICOLON .

    $default  reduce using rule 59 (impossibility)


state 107

   10 fluent: id LEFT_PAREN param_list RIGHT_PAREN .
   26 action: id LEFT_PAREN param_list RIGHT_PAREN .
   33 agent: id LEFT_PAREN param_list RIGHT_PAREN .

    CAUSES     reduce using rule 26 (action)
    DETERMINE  reduce using rule 26 (action)
    AWAREOF    reduce using rule 33 (agent)
    OBSERVES   reduce using rule 33 (agent)
    ANNOUNCES  reduce using rule 26 (action)
    $default   reduce using rule 10 (fluent)


state 108

   53 dynamic_law: action CAUSES literal_list if_part_bf . SEMICOLON

    SEMICOLON  shift, and go to state 125


state 109

   55 determine: action DETERMINE fluent_det_list SEMICOLON .

    $default  reduce using rule 55 (determine)


state 110

   19 formula: formula . COMMA formula
   20        | formula . OR formula
   21        | LEFT_PAREN formula . RIGHT_PAREN

    OR           shift, and go to state 111
    COMMA        shift, and go to state 112
    RIGHT_PAREN  shift, and go to state 126


state 111

   20 formula: formula OR . formula

    LEFT_PAREN  shift, and go to state 90
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35

    id       go to state 8
    fluent   go to state 39
    literal  go to state 91
    formula  go to state 127


state 112

   19 formula: formula COMMA . formula

    LEFT_PAREN  shift, and go to state 90
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35

    id       go to state 8
    fluent   go to state 39
    literal  go to state 91
    formula  go to state 128


state 113

   56 announcement: action ANNOUNCES formula SEMICOLON .

    $default  reduce using rule 56 (announcement)


state 114

   51 if_part_fluent: IF . formula

    LEFT_PAREN  shift, and go to state 90
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35

    id       go to state 8
    fluent   go to state 39
    literal  go to state 91
    formula  go to state 129


state 115

   57 awareness: agent AWAREOF action if_part_fluent . SEMICOLON

    SEMICOLON  shift, and go to state 130


state 116

   58 observance: agent OBSERVES action if_part_fluent . SEMICOLON

    SEMICOLON  shift, and go to state 131


state 117

   15 literal: NEGATION . fluent
   47 belief_formula: LEFT_PAREN NEGATION . belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 132
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 133


state 118

   44 belief_formula: B LEFT_PAREN . agent COMMA belief_formula RIGHT_PAREN

    ID  shift, and go to state 7

    id     go to state 32
    agent  go to state 134


state 119

   49 belief_formula: C LEFT_PAREN . LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    LEFT_BRAC  shift, and go to state 135


state 120

   48 belief_formula: E LEFT_PAREN . LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    LEFT_BRAC  shift, and go to state 136


state 121

   46 belief_formula: belief_formula OR . belief_formula

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 137


state 122

   45 belief_formula: belief_formula COMMA . belief_formula

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 138


state 123

   70 init: INIT belief_formula SEMICOLON .

    $default  reduce using rule 70 (init)


state 124

   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula
   73 goal: GOAL belief_formula . SEMICOLON

    OR         shift, and go to state 121
    COMMA      shift, and go to state 122
    SEMICOLON  shift, and go to state 139


state 125

   53 dynamic_law: action CAUSES literal_list if_part_bf SEMICOLON .

    $default  reduce using rule 53 (dynamic_law)


state 126

   21 formula: LEFT_PAREN formula RIGHT_PAREN .

    $default  reduce using rule 21 (formula)


state 127

   19 formula: formula . COMMA formula
   20        | formula . OR formula
   20        | formula OR formula .

    COMMA  shift, and go to state 112

    $default  reduce using rule 20 (formula)


state 128

   19 formula: formula . COMMA formula
   19        | formula COMMA formula .
   20        | formula . OR formula

    $default  reduce using rule 19 (formula)


state 129

   19 formula: formula . COMMA formula
   20        | formula . OR formula
   51 if_part_fluent: IF formula .

    OR     shift, and go to state 111
    COMMA  shift, and go to state 112

    $default  reduce using rule 51 (if_part_fluent)


state 130

   57 awareness: agent AWAREOF action if_part_fluent SEMICOLON .

    $default  reduce using rule 57 (awareness)


state 131

   58 observance: agent OBSERVES action if_part_fluent SEMICOLON .

    $default  reduce using rule 58 (observance)


state 132

   14 literal: fluent .
   15        | NEGATION fluent .

    OR           reduce using rule 14 (literal)
    OR           [reduce using rule 15 (literal)]
    COMMA        reduce using rule 14 (literal)
    COMMA        [reduce using rule 15 (literal)]
    RIGHT_PAREN  reduce using rule 14 (literal)
    RIGHT_PAREN  [reduce using rule 15 (literal)]
    $default     reduce using rule 14 (literal)


state 133

   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula
   47               | LEFT_PAREN NEGATION belief_formula . RIGHT_PAREN

    OR           shift, and go to state 121
    COMMA        shift, and go to state 122
    RIGHT_PAREN  shift, and go to state 140


state 134

   44 belief_formula: B LEFT_PAREN agent . COMMA belief_formula RIGHT_PAREN

    COMMA  shift, and go to state 141


state 135

   49 belief_formula: C LEFT_PAREN LEFT_BRAC . agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    ID  shift, and go to state 7

    id          go to state 32
    agent       go to state 33
    agent_list  go to state 142


state 136

   48 belief_formula: E LEFT_PAREN LEFT_BRAC . agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    ID  shift, and go to state 7

    id          go to state 32
    agent       go to state 33
    agent_list  go to state 143


state 137

   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula
   46               | belief_formula OR belief_formula .

    COMMA  shift, and go to state 122

    $default  reduce using rule 46 (belief_formula)


state 138

   45 belief_formula: belief_formula . COMMA belief_formula
   45               | belief_formula COMMA belief_formula .
   46               | belief_formula . OR belief_formula

    $default  reduce using rule 45 (belief_formula)


state 139

   73 goal: GOAL belief_formula SEMICOLON .

    $default  reduce using rule 73 (goal)


state 140

   47 belief_formula: LEFT_PAREN NEGATION belief_formula RIGHT_PAREN .

    $default  reduce using rule 47 (belief_formula)


state 141

   44 belief_formula: B LEFT_PAREN agent COMMA . belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 144


state 142

   35 agent_list: agent_list . COMMA agent
   49 belief_formula: C LEFT_PAREN LEFT_BRAC agent_list . RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    COMMA       shift, and go to state 59
    RIGHT_BRAC  shift, and go to state 145


state 143

   35 agent_list: agent_list . COMMA agent
   48 belief_formula: E LEFT_PAREN LEFT_BRAC agent_list . RIGHT_BRAC COMMA belief_formula RIGHT_PAREN

    COMMA       shift, and go to state 59
    RIGHT_BRAC  shift, and go to state 146


state 144

   44 belief_formula: B LEFT_PAREN agent COMMA belief_formula . RIGHT_PAREN
   45               | belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula

    OR           shift, and go to state 121
    COMMA        shift, and go to state 122
    RIGHT_PAREN  shift, and go to state 147


state 145

   49 belief_formula: C LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC . COMMA belief_formula RIGHT_PAREN

    COMMA  shift, and go to state 148


state 146

   48 belief_formula: E LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC . COMMA belief_formula RIGHT_PAREN

    COMMA  shift, and go to state 149


state 147

   44 belief_formula: B LEFT_PAREN agent COMMA belief_formula RIGHT_PAREN .

    $default  reduce using rule 44 (belief_formula)


state 148

   49 belief_formula: C LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA . belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 150


state 149

   48 belief_formula: E LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA . belief_formula RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 95
    ID          shift, and go to state 7
    NEGATION    shift, and go to state 35
    B           shift, and go to state 96
    C           shift, and go to state 97
    E           shift, and go to state 98

    id              go to state 8
    fluent          go to state 39
    literal         go to state 91
    formula         go to state 99
    belief_formula  go to state 151


state 150

   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula
   49               | C LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula . RIGHT_PAREN

    OR           shift, and go to state 121
    COMMA        shift, and go to state 122
    RIGHT_PAREN  shift, and go to state 152


state 151

   45 belief_formula: belief_formula . COMMA belief_formula
   46               | belief_formula . OR belief_formula
   48               | E LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula . RIGHT_PAREN

    OR           shift, and go to state 121
    COMMA        shift, and go to state 122
    RIGHT_PAREN  shift, and go to state 153


state 152

   49 belief_formula: C LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN .

    $default  reduce using rule 49 (belief_formula)


state 153

   48 belief_formula: E LEFT_PAREN LEFT_BRAC agent_list RIGHT_BRAC COMMA belief_formula RIGHT_PAREN .

    $default  reduce using rule 48 (belief_formula)
